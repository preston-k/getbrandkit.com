{"version":3,"file":"find-coffee.js","sources":["../node_modules/es-tostring/index.mjs","../node_modules/es-is/src/bool.coffee","../src/index.coffee"],"sourcesContent":["export default function(obj) {\n  return Object.prototype.toString.call(obj)\n}\n","import toString from 'es-tostring'\n\n# Test if `value` is a boolean.\n#\n# @param {Mixed} value value to test\n# @return {Boolean} true if `value` is a boolean, false otherwise\n# @api public\nexport default isBool = (value) ->\n  toString(value) == '[object Boolean]'\n","import path     from 'path'\nimport {isBool} from 'es-is'\n\n# Check version of coffee found\nversion = (coffeePath) ->\n  pkg = require(path.resolve(coffeePath, '../../../package.json'))\n  parseInt (pkg.version.split '.')[0], 10\n\n# Resolve specific version of coffee, matching either package name\nresolveCoffee = (wanted) ->\n  pkgs = ['coffeescript', 'coffee-script']\n\n  for pkg in pkgs\n    try\n      coffeePath = require.resolve pkg\n      return coffeePath if (version coffeePath) == wanted\n    catch err\n  throw new Error 'Unable to find CoffeeScript matching version ' + wanted\n\n# Find and return coffee version, or alternately just path\nexport default findCoffee = (wanted, lazy) ->\n  if isBool wanted\n    [wanted, lazy] = [lazy, wanted]\n\n  # Default to 2, but take accept 1\n  unless wanted? or wanted == 'any'\n    try\n      return findCoffee 2, lazy\n    catch err\n      return findCoffee 1, lazy\n\n  # Resolve path to package\n  pkgPath = resolveCoffee wanted\n\n  # If lazy only return path\n  if lazy\n    pkgPath\n  else\n    require pkgPath\n"],"names":["isBool"],"mappings":";;;;;;;AAAA,eAAe,SAAS,GAAG,EAAE;EAC3B,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;CAC3C;;;;;;ACFD,IAAA;;AAAA,AAOA,eAAe,MAAA,GAAS,SAAC,KAAD;SACtB,QAAA,CAAS,KAAT,CAAA,KAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRrB,IAAA,UAAA;IAAA,aAAA;IAAA;;AAAA;AAIA,OAAA,GAAU,SAAC,UAAD;MACR;EAAA,GAAA,GAAM,OAAA,CAAQ,IAAI,CAAC,OAAL,CAAa,UAAb,EAAyB,uBAAzB,CAAR;SACN,QAAA,CAAS,CAAC,GAAG,CAAC,OAAO,CAAC,KAAZ,CAAkB,GAAlB,CAAD,EAAwB,CAAA,CAAjC,EAAqC,EAArC;EANF;;;AASA,aAAA,GAAgB,SAAC,MAAD;MACd,UAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA;EAAA,IAAA,GAAO,CAAC,cAAD,EAAiB,eAAjB;EAEP,KAAA,sCAAA;;;MAEI,UAAA,GAAa,OAAO,CAAC,OAAR,CAAgB,GAAhB;MACb,IAAqB,CAAC,OAAA,CAAQ,UAAR,CAAD,MAAwB,MAA7C;eAAO,WAAP;OAFF;KAAA,aAAA;MAGM,AAHN;;;EAIF,MAAM,IAAI,KAAJ,CAAU,+CAAA,GAAkD,MAA5D;EAjBR;;;AAoBA,YAAe,UAAA,GAAa,SAAC,MAAD,EAAS,IAAT;MAC1B,GAAA,EAAA;EAAA,IAAGA,QAAA,CAAO,MAAP,CAAH;IACE,CAAC,MAAD,EAAS,IAAT,CAAA,GAAiB,CAAC,IAAD,EAAO,MAAP,EADnB;GAAA;;EAIA,IAAA,EAAO,oBAAW,MAAA,KAAU,KAA5B,CAAA;;aAEW,UAAA,CAAW,CAAX,EAAc,IAAd,EADT;KAAA,aAAA;MAEM,OACG,UAAA,CAAW,CAAX,EAAc,IAAd,EAHT;KADF;GAJA;;EAWA,OAAA,GAAU,aAAA,CAAc,MAAd,EAXV;;EAcA,IAAG,IAAH;WACE,QADF;GAAA,MAAA;WAGE,OAAA,CAAQ,OAAR,EAHF;;;;;;"}